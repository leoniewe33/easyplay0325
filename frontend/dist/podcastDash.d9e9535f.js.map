{"mappings":"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","sources":["src/js/podcastDash.js"],"sourcesContent":["    var episodeCount = 20;\n    var URLplaying = null;\n        document.getElementById('menuButton').addEventListener('click', function() {\n            document.body.classList.toggle('drawer-open');\n        });\n          document.addEventListener('click', function(event) {\n            var drawer = document.getElementById('drawer');\n            var menuButton = document.getElementById('menuButton');\n\n            if(!drawer.contains(event.target) && !menuButton.contains(event.target)) {\n                document.body.classList.remove('drawer-open');\n            }\n        });\n        document.getElementById('searchButton').addEventListener('click', function() {\n            var searchBar = document.getElementById('podcast-search');\n            searchBar.classList.toggle('visible');\n            if (searchBar.classList.contains('visible')) {\n            document.getElementById('search-title').focus();\n            }       \n         });\n\n        function getQueryParams() {\n            const params = new URLSearchParams(window.location.search);\n            return {\n                id: params.get('id'),\n            };\n        }\n\n        //Podcast für das Dash bekommen über id die in URL übergeben wird\n        async function getPodcast()\n        {\n            let url = new URL('https://api.fyyd.de/0.2/podcast/');\n            url.searchParams.append('podcast_id', getQueryParams().id);\n            console.log('URL:', url.href);\n            try {\n            const response = await fetch(url);\n            const data = await response.json();\n            console.log(data);\n            document.getElementById('podcast-title').textContent = data.data.title;\n            document.getElementById('podcast-description').textContent = data.data.description;\n            document.getElementById('podcast-image').src = data.data.layoutImageURL;\n            } catch (error) {\n            console.error('Error fetching podcasts:', error);\n            document.getElementById('podcast-list').innerHTML = '<p class=\"loading-message\">Fehler beim Laden von Podcasts. Bitte probiere es später nochmal.</p>';\n\n            }\n        }\n\n    \n\n       //Wenn die Seite aufgerufen wird werden die alle Inhalte geladen inkl. Animation\n        document.addEventListener('DOMContentLoaded', function() {\n            showLoadingAnimation();\n            const params = new URLSearchParams(window.location.search);\n            const id = params.get('id');\n            getPodcast(id);\n            fetchAudio(id,episodeCount);\n            const podcastId = getQueryParams().id;\n        \n            let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        \n            if (favorites.includes(podcastId)) {\n            document.getElementById(\"fav-btn-image\").src=\"images/Haken.png\";\n            } else {\n            }\n    \n    \n            const searchInput = document.getElementById('search-title');\n            if (searchInput) {\n                searchInput.addEventListener('keydown', function(event) {\n                    if (event.key === 'Enter') {\n                        console.log(\"Enter key pressed\");\n                        searchPodcasts();\n                    }\n                });\n            } else {\n                console.error(\"Search input field not found\");\n            }\n        });\n        \n\n        async function fetchPodcast() {\n            let url = new URL('https://api.fyyd.de/0.2/podcast/');\n            url.searchParams.append('podcast_id', getQueryParams().id);\n            //url.searchParams.append('count', '10');\n            console.log('URL:', url.href);\n            try {\n            const response = await fetch(url);\n            const data = await response.json();\n            insertEpisodes(data);\n            document.getElementById('audio-player').load();\n            } catch (error) {\n            console.error('Error fetching podcasts:', error);\n            document.getElementById('podcast-list').innerHTML = '<p class=\"loading-message\">Fehler beim Laden von Podcasts. Bitte probiere es später nochmal.</p>';\n            \n\n        }\n    }\n    //Fetchen der AudioURL mit Erstellen der Divs...\n    async function fetchAudio(id, episodeCount) {\n        \n    let url = new URL('https://api.fyyd.de/0.2/podcast/episodes');\n    url.searchParams.append('podcast_id', id);\n    url.searchParams.append('count', episodeCount);\n    console.log('URL:', url.href);\n    \n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        \n        insertEpisodes(data);\n        \n        \n        if (data.data.episodes.length < episodeCount) {\n            document.getElementById('moreBtn').style.display = 'none';\n        } else {\n            document.getElementById('moreBtn').style.display = 'inline'; // \"More\"-Button anzeigen\n        }\n        if (episodeCount <= 1) {\n            document.getElementById('lessBtn').style.display = 'none';\n        } else {\n            document.getElementById('lessBtn').style.display = 'inline'; // \"Less\"-Button anzeigen\n        }\n        \n    } catch (error) {\n        console.error('Error fetching podcasts:', error);\n        document.getElementById('episodes-div').innerHTML = '<p class=\"loading-message\">Fehler beim Laden von Podcasts. Bitte probiere es später nochmal.</p>';\n    }\n    hideLoadingAnimation();\n}\n    //Bei mehr Episoden die geladen werden sollen, nutzen wir die Methode um die Inhalte dynamisch nachzuladen\n    function fetchNewAudio(change)\n    {     \n    if (change === 1) {\n        episodeCount += 20;\n        fetchAudio(getQueryParams().id, episodeCount);\n    }\n    if (change === -1) {\n        if(episodeCount <= 20)\n        {\n            episodeCount = 1;\n        }else{\n            episodeCount -= 20;\n        }\n        \n        fetchAudio(getQueryParams().id, episodeCount);\n    }\n}\n    \n\n//Erstellen der Buttons und Divs mit einer Schleife\nfunction insertEpisodes(data) {\n    const resultsDiv = document.getElementById('episodes-div');\n    resultsDiv.innerHTML = '';\n    var newest = true;\n\n    data.data.episodes.forEach((element, index) => {\n        \n        const divEpisode = document.createElement(\"div\");\n        divEpisode.className = \"episode-container\";\n\n        const episodeButton = document.createElement('button');\n        episodeButton.className = \"episode-button\";\n        \n        const image = document.createElement(\"img\");\n        image.src = \"images/play-button.png\";\n        image.style = \"height: 30px\";\n        image.className = \"episode-play-icon\";\n        const description = document.createElement(\"div\");\n        description.innerHTML = element.description;\n        const title = document.createElement(\"div\");\n        title.className = \"episode-title\";\n        title.innerHTML = element.title;\n        if (newest)\n        {\n            title.innerHTML += \" - <b>Neuste Folge</b>\";\n            newest = false;\n        }\n\n        const time = document.createElement(\"div\");\n        time.className = \"episode-time\";\n        time.innerHTML = element.duration_string;\n\n       \n\n        episodeButton.appendChild(image)\n        episodeButton.addEventListener('click', function() {\n            URLplaying = element.enclosure;\n            console.log(URLplaying);\n            loadEpisode(element.enclosure);\n        });\n        divEpisode.appendChild(episodeButton);\n        divEpisode.appendChild(title);\n        divEpisode.appendChild(time);\n\n        divEpisode.addEventListener('click', function() {\n            // Umschalten der Sichtbarkeit der Beschreibung\n            if (description.style.display === \"none\" || description.style.display === \"\") {\n                description.style.display = \"block\";\n            } else {\n                description.style.display = \"none\";\n            }\n        });\n\n        resultsDiv.appendChild(divEpisode);\n        description.className = \"episode-description\";\n        resultsDiv.appendChild(description);\n    });\n}\nfunction addFavourite() {\n        console.log(\"favourite\");\n        const podcastId = getQueryParams().id;\n        \n        let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        \n        if (!favorites.includes(podcastId)) {\n            favorites.push(podcastId);\n            localStorage.setItem('favorites', JSON.stringify(favorites));\n            document.getElementById(\"fav-btn-image\").src=\"/images/Haken.png\";\n            //alert(\"Podcast wurde zu den Favoriten hinzugefügt!\"); --> wir haben uns dagegen entschieden dieses Feedback zu nutzen, aber wollen es trotzdem stehen lassen\n        } else {\n            alert(\"Podcast ist bereits in den Favoriten.\");\n        }\n    }\n\n\n    //Speichern des Fortschritts in einer Folge durch Local-Cache\n    document.addEventListener('DOMContentLoaded', function() {\n    const audioPlayer = document.getElementById('audio-player');\n    audioPlayer.addEventListener('timeupdate', function() {\n        if (URLplaying) {\n            const podcastId = getQueryParams().id + '-' + URLplaying;//Custom id aus PodcastID und der URL der Episode\n            localStorage.setItem(`podcast-${podcastId}-progress`, audioPlayer.currentTime);\n        }\n    });\n    window.addEventListener('beforeunload', function() {\n        if (URLplaying) {\n            const podcastId = getQueryParams().id + '-' + URLplaying;\n            localStorage.setItem(`podcast-${podcastId}-progress`, audioPlayer.currentTime);\n        }\n    });\n    //Animation anzeigen beim Abspielen bzw. Stoppen\n    audioPlayer.addEventListener('play', function() {\n        showLoadingAnimation();\n    });\n    audioPlayer.addEventListener('pause', function() {\n        hideLoadingAnimation();\n    });\n    // Extra Abfrage für das Ende einer Folge\n    audioPlayer.addEventListener('ended', function() {\n        hideLoadingAnimation();\n    });\n\n    \n});\n\n//Episode in den Player Laden\nfunction loadEpisode(episodeUrl) {\n    const audioPlayer = document.getElementById('audio-player');\n    const audioSource = document.getElementById('audio-source');\n    const audioContainer = document.getElementById('audio-container');\n\n    const podcastId = getQueryParams().id + '-' + episodeUrl;\n\n    URLplaying = episodeUrl;\n    audioSource.src = episodeUrl;\n    \n    audioPlayer.load();\n\n    \n    const savedTime = localStorage.getItem(`podcast-${podcastId}-progress`);\n    if (savedTime) {\n        audioPlayer.currentTime = parseFloat(savedTime);\n    }\n    audioContainer.classList.remove('audio-hidden');\n    audioPlayer.play();\n}\ndocument.getElementById('closeButton').addEventListener('click', function() {\n            document.body.classList.remove('drawer-open');\n         });\n\n\n//Funktionen um die Animation zu starten/zu beenden\nfunction showLoadingAnimation() {\n    const loadingAnimation = document.getElementById('loadingAnimation');\n    if (loadingAnimation) {\n        loadingAnimation.style.animationPlayState = 'running'; // Start the animation\n        loadingAnimation.style.display = 'flex'; // Ensure it's visible\n    } else {\n        console.error(\"Loading animation element not found.\");\n    }\n}\n\nfunction hideLoadingAnimation() {\n    const loadingAnimation = document.getElementById('loadingAnimation');\n    if (loadingAnimation) {\n        loadingAnimation.style.animationPlayState = 'paused'; // Pause the animation\n    } else {\n        console.error(\"Loading animation element not found.\");\n    }\n}\n\nwindow.addFavourite = addFavourite;\nwindow.fetchNewAudio = fetchNewAudio;"],"names":[],"version":3,"file":"podcastDash.d9e9535f.js.map","sourceRoot":"/__parcel_source_root/"}