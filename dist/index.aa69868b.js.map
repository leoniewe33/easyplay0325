{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["\"use strict\";\r\n\r\nvar userLang = navigator.language || navigator.userLanguage;\r\n\r\n//Funktionen beim Aufruf der Seite um die Inhalte zu laden\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    console.log(\"onLoad Function\");\r\n    fetchRecommendedPodcasts();\r\n    const resultsDiv = document.getElementById('podcast-list');\r\n    resultsDiv.innerHTML = '<p class=\"loading-message\">Empfohlene Podcast werden geladen...</p>';\r\n    getCategories();\r\n    \r\n    const searchInput = document.getElementById('search-title');\r\n    if (searchInput) {\r\n        searchInput.addEventListener('keydown', function(event) {\r\n            if (event.key === 'Enter') {\r\n                searchPodcasts();\r\n            }\r\n        });\r\n    } else {\r\n        console.error(\"Search input field not found\");\r\n    }\r\n    //Wenn man keine Favoriten hat, wird das Panel nicht angezeigt --> wirkt cleaner\r\n    let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    console.log(favorites);\r\n    if (favorites.length === 0) {\r\n    document.getElementById(\"newestEpisodes\").innerHTML = '';\r\n    } else {\r\n    favorites.forEach(element => {\r\n        insertFavouriteEpisodes(element);\r\n    });\r\n}\r\n\r\n});\r\n\r\n//Einfügen der neusten Episoden der Lieblingspodcasts\r\nasync function insertFavouriteEpisodes(id){\r\n    var div = document.getElementById(\"fav-div\");\r\n    let url = new URL('https://api.fyyd.de/0.2/podcast/episodes');\r\n    url.searchParams.append(\"podcast_id\", id);\r\n    url.searchParams.append(\"count\", 1);\r\n    console.log('URL:', url.href);\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        console.log(data.data.episodes.length);\r\n\r\n\r\n        const podcastDiv = document.createElement('div');\r\n        const podcastImage = document.createElement('img');\r\n        const podcastTitle = document.createElement('h4');\r\n        const link = document.createElement(\"a\");\r\n        link.href = `podcastDash.html?id=${encodeURIComponent(id)}`;\r\n        link.target = \"_blank\";\r\n        podcastTitle.innerHTML = limitToXWords( data.data.episodes[0].title,6);\r\n        podcastImage.src = data.data.layoutImageURL;\r\n        podcastDiv.appendChild(podcastImage);\r\n        podcastDiv.appendChild(podcastTitle);\r\n        link.appendChild(podcastDiv)\r\n        div.appendChild(link);\r\n        \r\n    }\r\n    catch (error) {\r\n        console.error('Error fetching recommended podcasts:', error);\r\n        document.getElementById('podcast-list').innerHTML = '<p class=\"loading-message\">Fehler beim Laden empfohlener Podcasts. Bitte probiere es später nochmal.</p>';\r\n    }\r\n}\r\n\r\n//Suchfunktion die nach dem eingegebenen Titel sucht\r\nfunction searchPodcasts() {\r\n    const searchTitle = document.getElementById('search-title').value;\r\n    const resultsDiv = document.getElementById('search');\r\n    resultsDiv.innerHTML = '<p class=\"loading-message\">Suche läuft...';\r\n    fetchPodcasts(searchTitle,0);\r\n}\r\n\r\n//Holt die benötigte Anfrage von der API und nutzt das Page system um dynamisch nachzuladen\r\nasync function fetchPodcasts(title, page) {\r\n    showLoadingAnimation();\r\n    let url = new URL('https://api.fyyd.de/0.2/search/podcast/');\r\n    url.searchParams.append('title', title);\r\n    url.searchParams.append('page', page);\r\n    console.log('URL:', url.href);\r\n    \r\n    const resultsDiv = document.getElementById('search');\r\n\r\n    if (page === 0) {\r\n        resultsDiv.innerHTML = '<p class=\"loading-message suche\">Suche läuft...</p>';\r\n    }\r\n    const existingMoreBtn = document.getElementById('more-btn-search');\r\n    if (existingMoreBtn) {\r\n        existingMoreBtn.parentNode.removeChild(existingMoreBtn);\r\n    }\r\n    const loadingMessage = document.createElement('p');\r\n    if(page != 0){\r\n        loadingMessage.textContent = 'Ergebnisse werden geladen...';\r\n    }\r\n    \r\n    loadingMessage.setAttribute('id', 'loading-message');\r\n    resultsDiv.appendChild(loadingMessage);\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        insertSearchResults(data, page);\r\n\r\n        // Remove the loading message\r\n        const loadingMessage = document.getElementById('loading-message');\r\n        if (loadingMessage) {\r\n            loadingMessage.remove();\r\n        }\r\n\r\n        // Add \"more\" button if there are more results\r\n        if (data.data.length > 0) {\r\n            // Create the button element with Material Icon\r\n            const moreBtn = document.createElement('button');\r\n            moreBtn.className = \"more-button\";\r\n            moreBtn.style = \"border: none; background: white;\"\r\n            moreBtn.setAttribute(\"id\", \"more-btn-search\"); // ID for the button\r\n            moreBtn.addEventListener('click', function () {\r\n                console.log(\"moreBtn\");\r\n                fetchPodcasts(title, page + 1);\r\n            });\r\n\r\n            // Create the icon element\r\n            const icon = document.createElement('img');\r\n            icon.src = \"images/arrow_right.png\";\r\n            icon.style = \"height: 90px; margin-bottom: 125px; padding-left: 40px\"\r\n            // Append the icon to the button\r\n            moreBtn.appendChild(icon);\r\n\r\n            // Append the button to the container\r\n            resultsDiv.appendChild(moreBtn);\r\n        } else {\r\n            resultsDiv.innerHTML = 'Keine weiteren Ergebnisse.';\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching podcasts:', error);\r\n        resultsDiv.innerHTML = '<p class=\"loading-message\">Fehler beim Laden von Podcasts. Bitte probiere es später nochmal.</p>';\r\n    }\r\n    hideLoadingAnimation();\r\n\r\n}\r\n\r\n//Holt aus allen Podcast eine zufällige Seite\r\nasync function fetchRecommendedPodcasts() {\r\n    showLoadingAnimation();\r\n    let url = new URL('https://api.fyyd.de/0.2/podcasts/');\r\n    url.searchParams.append('page',getRandomInt(1370));\r\n    url.searchParams.append('count',30);\r\n    console.log('URL:', url.href);\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        insertRecommendedResults(data);\r\n    } catch (error) {\r\n        console.error('Error fetching recommended podcasts:', error);\r\n        document.getElementById('podcast-list').innerHTML = '<p class=\"loading-message\">Fehler beim Laden empfohlener Podcasts. Bitte probiere es später nochmal.</p>';\r\n\r\n    }\r\n    hideLoadingAnimation();\r\n}\r\n//Zufallsfunktion für Recommended gibt eine Zufallszahl von 0 bis max zurück\r\nfunction getRandomInt(max){\r\n    return Math.floor(Math.random() * max);\r\n}\r\n\r\n//Einfügen der Zufälligen Podcast (Empfohlen sind hier einfach zufällige Podcast, sodass jeder Podcast die Chance hat gesehen zu werden)\r\nfunction insertRecommendedResults(data) {\r\n    const resultsDiv = document.getElementById('podcast-list');\r\n    resultsDiv.innerHTML = '';\r\n    data.data.forEach(podcast => {\r\n        const podcastDiv = document.createElement('div');\r\n        const titleDiv = document.createElement('h4');\r\n        const descriptionDiv = document.createElement('p');\r\n        const podcastImage = document.createElement('img');\r\n        const podcastLink = document.createElement('a');\r\n        titleDiv.textContent = podcast.title;\r\n        podcastImage.src = podcast.layoutImageURL;\r\n        podcastImage.className = 'img';\r\n        podcastLink.appendChild(podcastImage);\r\n        podcastLink.appendChild(titleDiv);\r\n        podcastLink.href = `podcastDash.html?id=${encodeURIComponent(podcast.id)}`;\r\n        //podcastLink.target = \"_blank\"; besser fürs Abspielen im Hintergrund aber nervig, da zu viele Tabs\r\n        podcastDiv.appendChild(podcastLink);\r\n        resultsDiv.appendChild(podcastDiv);\r\n    });\r\n}\r\n\r\n//Einfügen der suche\r\nfunction insertSearchResults(data, page) {\r\n    const resultsDiv = document.getElementById('search');\r\n    // Wenn es sich um die erste Seite handelt, wird das div geleert\r\n    if (page === 0) {\r\n        resultsDiv.innerHTML = '';\r\n    }\r\n\r\n    data.data.forEach(podcast => {\r\n        const podcastDiv = document.createElement('div');\r\n        const titleDiv = document.createElement('h4');\r\n        const podcastImage = document.createElement('img');\r\n        const podcastLink = document.createElement('a');\r\n\r\n        titleDiv.textContent = podcast.title;\r\n        podcastImage.src = podcast.layoutImageURL;\r\n        podcastImage.className = 'img'; // Added class for image styling\r\n\r\n        podcastLink.appendChild(podcastImage);\r\n        podcastLink.appendChild(titleDiv);\r\n\r\n        podcastLink.href = `podcastDash.html?id=${encodeURIComponent(podcast.id)}`;\r\n        podcastLink.target = \"_blank\";\r\n\r\n        podcastDiv.appendChild(podcastLink);\r\n\r\n        resultsDiv.appendChild(podcastDiv);\r\n    });\r\n}\r\n\r\n//Limitiert die Wörter für die Podcastfolgen, da diese zu lang für das Grid war, es werden nicht mehr als x Wörter zurückgegeben\r\nfunction limitToXWords(input,x) {\r\n    const words = input.split(\" \");\r\n    if (words.length > x) {\r\n      return words.slice(0, x).join(\" \");\r\n    }\r\n    return input;\r\n  }\r\n\r\n//laden der Kategorien von der API\r\nasync function getCategories() {\r\n    let url = new URL('https://api.fyyd.de/0.2/categories');\r\n    console.log('URL:', url.href);\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        const div = document.getElementById(\"categoryContainer\");\r\n        div.innerHTML = '';\r\n        const catBtndiv = document.createElement('div');\r\n        const catCount = data.data.length;\r\n        var forCounter = 0;\r\n        var randomCat = Math.floor(Math.random()*catCount+1)\r\n        console.log(randomCat);\r\n        data.data.forEach(element => {\r\n            const catBtn = document.createElement('input');\r\n            catBtn.setAttribute(\"type\", \"button\");\r\n            catBtn.setAttribute(\"value\", element.name_de);\r\n            catBtn.className = 'category-button';\r\n            forCounter++;\r\n            if(forCounter === randomCat)\r\n                {\r\n                    console.log(\"fetching\" + element.name_de);\r\n                    fetchCategoryPodcasts(element.id,element.name_de,0)\r\n                }\r\n            catBtn.addEventListener('click', function() {\r\n                fetchCategoryPodcasts(element.id,element.name_de,0);\r\n            });\r\n\r\n            catBtndiv.appendChild(catBtn);\r\n            \r\n        });\r\n        div.appendChild(catBtndiv);\r\n    } catch (error) {\r\n        console.error('Error fetching categories:', error);\r\n        document.getElementById(\"categoryContainer\").innerHTML = '<p class=\"loading-message\">Fehler beim Laden von Kategorien. Bitte probiere es später nochmal.</p>';\r\n    }\r\n}\r\n//Fetchen der jeweiligen Kategorie, dabei nutzen wir auch hier das Page System zum nachladen um mehr Podcasts anzuzeigen\r\nasync function fetchCategoryPodcasts(id, name, page) {\r\n    showLoadingAnimation();\r\n    let url = new URL('https://api.fyyd.de/0.2/category');\r\n    url.searchParams.append('category_id', id);\r\n    url.searchParams.append('page', page);\r\n    console.log('URL:', url.href);\r\n    document.getElementById(\"category-search-monitor\").innerHTML = name\r\n\r\n    const resultsDiv = document.getElementById(\"categoryResult\");\r\n\r\n    if (page === 0) {\r\n        resultsDiv.innerHTML = '<p class=\"loading-message\">Inhalte der Kategorie ' + name + ' werden geladen...</p>';\r\n    } else {\r\n        const existingMoreBtn = document.getElementById('more-btn');\r\n        if (existingMoreBtn) {\r\n            resultsDiv.removeChild(existingMoreBtn);\r\n        }\r\n        const loadingMessage = document.createElement('p');\r\n        loadingMessage.textContent = \"Weitere Podcasts werden geladen...\";\r\n        loadingMessage.setAttribute(\"id\", \"loading-message\");\r\n        resultsDiv.appendChild(loadingMessage);\r\n    }\r\n\r\n    try {\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        insertCategorySearchResults(data, page === 0);\r\n        const loadingMessage = document.getElementById('loading-message');\r\n        if (loadingMessage) {\r\n            resultsDiv.removeChild(loadingMessage);\r\n        }\r\n//Erstellen des More-Buttons am Ende des Grids um mehr anzuzeigen\r\nconst moreBtn = document.createElement('button'); \r\nmoreBtn.setAttribute(\"type\", \"button\");\r\nmoreBtn.setAttribute(\"id\", \"more-btn\");\r\nmoreBtn.style = \"border: none; background: white;\"\r\nmoreBtn.addEventListener('click', function () {\r\n    console.log(\"moreBtn\");\r\n    fetchCategoryPodcasts(id, name, page + 1);\r\n});\r\n\r\nconst icon = document.createElement('img');\r\nicon.src = \"images/arrow_right.png\";\r\nicon.style.height = \"90px\";\r\nicon.style.marginBottom = \"140px\";\r\nicon.style.paddingLeft = \"40px\";\r\nmoreBtn.appendChild(icon);\r\nresultsDiv.appendChild(moreBtn);\r\n    } catch (error) {\r\n        console.error('Error fetching category podcasts:', error);\r\n        document.getElementById(\"categoryResult\").innerHTML = '<p class=\"loading-message\">Fehler beim Laden von Podcasts. Bitte probiere es später nochmal.</p>';\r\n    }\r\n    hideLoadingAnimation();\r\n}\r\n\r\n//Einfügen der Ergebnis bei der Kategorie-Suche, isInitialLoad ist hier, dass der Inhalt bereits geladen wurde, dann würde das Div geleert werden\r\nfunction insertCategorySearchResults(data, isInitialLoad) {\r\n    const resultsDiv = document.getElementById(\"categoryResult\");\r\n\r\n    if (isInitialLoad) {\r\n        resultsDiv.innerHTML = '';\r\n    }\r\n\r\n    data.data.podcasts.forEach(podcasts => {\r\n        const podcastDiv = document.createElement('div');\r\n        const titleDiv = document.createElement('h4');\r\n        const podcastImage = document.createElement('img');\r\n        const podcastLink = document.createElement('a');\r\n\r\n        titleDiv.textContent = podcasts.title;\r\n        podcastImage.src = podcasts.layoutImageURL;\r\n        podcastImage.className = 'img';\r\n\r\n        podcastLink.appendChild(podcastImage);\r\n        podcastLink.appendChild(titleDiv);\r\n\r\n        podcastLink.href = `podcastDash.html?id=${encodeURIComponent(podcasts.id)}&title=${encodeURIComponent(podcasts.title)}&description=${encodeURIComponent(podcasts.description)}&image=${encodeURIComponent(podcasts.layoutImageURL)}`;\r\n        podcastLink.target = \"_blank\";\r\n        podcastDiv.appendChild(podcastLink);\r\n\r\n        resultsDiv.appendChild(podcastDiv);\r\n    });\r\n}\r\n\r\n//Funktionen für die Animation\r\nfunction showLoadingAnimation() {\r\n    const loadingAnimation = document.getElementById('loadingAnimation');\r\n    if (loadingAnimation) {\r\n        loadingAnimation.style.animationPlayState = 'running'; // Start the animation\r\n        loadingAnimation.style.display = 'flex'; // Ensure it's visible\r\n    } else {\r\n        console.error(\"Loading animation element not found.\");\r\n    }\r\n}\r\n\r\nfunction hideLoadingAnimation() {\r\n    const loadingAnimation = document.getElementById('loadingAnimation');\r\n    if (loadingAnimation) {\r\n        loadingAnimation.style.animationPlayState = 'paused'; // Pause the animation\r\n    } else {\r\n        console.error(\"Loading animation element not found.\");\r\n    }\r\n}"],"names":[],"version":3,"file":"index.aa69868b.js.map","sourceRoot":"/__parcel_source_root/"}